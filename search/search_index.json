{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pre Core JS Getting started Download and install the Webstorm Trial Create a new empty project and create two files index.html and index.js and paste the content below. index.html !doctype html html lang = en head meta charset = UTF-8 meta name = viewport content = width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0 meta http-equiv = X-UA-Compatible content = ie=edge title Document / title / head body div Hello World / div script src = index.js type = text/javascript / script / body / html index.js console . log ( Hello World ); If you hover on the top right corner of the index.html , you will see the following image Click on the Chrome browser on that link. Then, open the Chrome Dev Tools using Ctrl Shift J (on Windows) or Ctrl Option J (on Mac); Click on the Console tab and you should see the \"Hello World\". Practicing with Strings, Arrays and Numbers Practice non-deprecated (watch out for the thumbs down sign) , relevant prototype methods only. Methods will be under .prototype. where Entity is String | Number | Array. e.g. // slice is a method available under String.prototype.slice and can be used as: const str = John Doe ; console . log ( str . slice ( 0 , 3 )); Strings: Reference MDN Numbers: Number MDN Arrays: Array Prototype Practice examples, and gain an understanding about the utility methods. Store the examples that you type in .js files within a repository. You should push the same repository to github and share the link. The entire exercise will take you 7 hours overall. Again, type out the code . Reading it will not be enough. More references Go here","title":"Home Page"},{"location":"#pre-core-js","text":"","title":"Pre Core JS"},{"location":"#getting-started","text":"Download and install the Webstorm Trial Create a new empty project and create two files index.html and index.js and paste the content below. index.html !doctype html html lang = en head meta charset = UTF-8 meta name = viewport content = width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0 meta http-equiv = X-UA-Compatible content = ie=edge title Document / title / head body div Hello World / div script src = index.js type = text/javascript / script / body / html index.js console . log ( Hello World ); If you hover on the top right corner of the index.html , you will see the following image Click on the Chrome browser on that link. Then, open the Chrome Dev Tools using Ctrl Shift J (on Windows) or Ctrl Option J (on Mac); Click on the Console tab and you should see the \"Hello World\".","title":"Getting started"},{"location":"#practicing-with-strings-arrays-and-numbers","text":"Practice non-deprecated (watch out for the thumbs down sign) , relevant prototype methods only. Methods will be under .prototype. where Entity is String | Number | Array. e.g. // slice is a method available under String.prototype.slice and can be used as: const str = John Doe ; console . log ( str . slice ( 0 , 3 )); Strings: Reference MDN Numbers: Number MDN Arrays: Array Prototype Practice examples, and gain an understanding about the utility methods. Store the examples that you type in .js files within a repository. You should push the same repository to github and share the link. The entire exercise will take you 7 hours overall. Again, type out the code . Reading it will not be enough. More references Go here","title":"Practicing with Strings, Arrays and Numbers"},{"location":"001-SAN-prototypes/","text":"SAN Examples const data = [ info , meta , check , mets ]; // Context and this // Fat arrow function pick up the local context outside the function // predicate function args - boolean // Change this to a function object and see what happens const predicate = ( str , index , arr ) = { // console.log(index); // console.log(arr); console . log ( this ); return str . startsWith ( me ); }; const predicateFatArrow = str = str . startsWith ( me ); console . log ( data . find ( predicate , { name : Mahantesh })); console . log ( data . findIndex ( predicateFatArrow )); // console.log(data.find( meta )); // will throw error","title":"SAN Examples"},{"location":"001-SAN-prototypes/#san-examples","text":"const data = [ info , meta , check , mets ]; // Context and this // Fat arrow function pick up the local context outside the function // predicate function args - boolean // Change this to a function object and see what happens const predicate = ( str , index , arr ) = { // console.log(index); // console.log(arr); console . log ( this ); return str . startsWith ( me ); }; const predicateFatArrow = str = str . startsWith ( me ); console . log ( data . find ( predicate , { name : Mahantesh })); console . log ( data . findIndex ( predicateFatArrow )); // console.log(data.find( meta )); // will throw error","title":"SAN Examples"},{"location":"002-basics/","text":"Other references JS Syntax","title":"002 basics"},{"location":"002-basics/#other-references","text":"JS Syntax","title":"Other references"}]}